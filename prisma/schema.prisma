// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

enum TypeChange {
  UPDATE
  CREATE
  DELETE
  READ
}

enum TypeAccount {  
  MECANICO   
  ADMINISTRADOR
}

enum appointmentState {
  ASIGNADA
  COMPLETADA
  PENDIENTE
  CANCELADA
}

model Session {
  id Int @id @default(autoincrement())
  name String
  identificacion String
  role TypeAccount @default(MECANICO)
  credentials Credentials? @relation("SessionCredentials")
}

model Credentials {
  id Int @id @default(autoincrement())
  password String @db.VarChar(50)
  author Session @relation("SessionCredentials", fields: [authorId], references: [id])
  authorId Int @unique
}

model Client {
  id Int @id @default(autoincrement())
  firstName String @db.VarChar(50)
  middleName String @db.VarChar(50)
  firstSurname String @db.VarChar(50)
  secondSurname String @db.VarChar(50)
  filed String @db.VarChar(50)
  description String? @default("Descripcion no establecida")
  clientState Boolean
  clientContact clientContact[] @relation("clientContact")
  clientVehicle clientVehicle[] @relation("clientVehicle")
}

model clientContact {
  id Int @id @default(autoincrement())
  phoneNumber String @db.VarChar(20)
  email String @db.VarChar(50)
  address String @db.VarChar(50)
  author Client @relation("clientContact", fields: [authorId], references: [id])
  authorId Int
}

model appointmentScheduling {
  id Int @id @default(autoincrement())
  appointmentDate DateTime
  ubicacion String @db.VarChar(50)
  appointmentState appointmentState @default(ASIGNADA)
}

model vehicleClients {
  id Int @id @default(autoincrement())
  brand String @db.VarChar(20)
  model String @db.VarChar(20)
  year DateTime @db.date
  engineDisplacement Int
  createAt DateTime
  descripton String
  author Client @relation("clientVehicle", fields: [authorId], references: [id])
  authorId Int
}

model LogApp {
  id Int @id @default(autoincrement())
  typeChange TypeChange
  origin String
  title String
  message String?
  data Json
}